{
    "env": {
        "browser": true,
        "es6": true
    },
    "parser": "babel-eslint",
    "extends": [
        "plugin:react/recommended",
        "airbnb"
    ],
    "globals": {
        "Atomics": "readonly",
        "SharedArrayBuffer": "readonly"
    },
    "parserOptions": {
        "ecmaFeatures": {
            "jsx": true
        },
        "ecmaVersion": 2018,
        "sourceType": "module"
    },
    "plugins": [
        "react"
    ],
    "rules": {
        // off-0, warn-1, error-2
        ////////// React /////////////////////
        // 除非有更好的理由使用混淆(mixins)，否则就使用组件类继承 React.Component
        "react/prefer-es6-class": 2,
        // 用 state refs， 最好用 class extends React.Component 而不是 React.createClass，没有使用 state、 refs ，最好用正常函数(不是箭头函数)而不是 class
        "react/prefer-stateless-function": 0,
        // React 组件用大驼峰，组件的实例用小驼峰
        "react/jsx-pascal-case": 2,
        // JSX 语法对齐风格
        "react/jsx-closing-bracket-location": 0,
        // JSX 属性中用双引号(")，但是在js里用单引号(')，正常的 HTML 属性也通常使用双引号而不是单引号
        "jsx-quotes": 2,
        // 总是在自动关闭的标签前加一个空格，正常情况下也不需要换行
        "react/jsx-space-before-closing": 0,
        // 在自闭和标签内空一格
        "react/jsx-tag-spacing": 0,
        // JSX 里的大括号不要空格
        "react/jsx-curly-spacing": 2,
        // prop 的值是 true 可以忽略这个值，直接写 prop 名
        "react/jsx-boolean-value": 2,
        // 不要用 isMounted
        "react/no-is-mounted": 2,
        "react/jsx-indent": [2, "tab"],
        // 验证JSX中的props缩进
        "react/jsx-indent-props": [0, "tab"],
        // 文件是.js还是.jsx
        "react/jsx-filename-extension": 0,
        // 禁止某些propTypes
        "react/forbid-prop-types": 0,
        // 推荐用 ref callback 函数
        "react/no-string-refs": 0,
        // 防止在数组遍历中使用数组key做索引
        "react/no-array-index-key": 0,
        // 强制组件方法顺序
        "react/sort-comp": 0,
        // 属性强制换行
        "react/jsx-first-prop-new-line": 0,
        // 当 JSX 标签有多行时，用圆括号包起来
        "react/jsx-wrap-multilines": 0,
        // 防止在React组件定义中丢失props验证
        "react/prop-types": 0,
        // 在数组或迭代器中验证JSX具有key属性
        "react/jsx-key": 2,
        // 防止在JSX中重复的props
        "react/jsx-no-duplicate-props": 2,
        // 在JSX中禁止未声明的变量
        "react/jsx-no-undef": 1,
        "block-spacing": 0,

        //////////  webpack别名 //////////
        "import/no-unresolved": 0,
        "import/no-extraneous-dependencies": 0,
        "import/extensions": 0,

        ////////// Possible Errors //////////
        "global-require": 0,
        "no-restricted-syntax": 0,
        "no-tabs": 0,
        "comma-dangle": 0,
        // disallow trailing commas in object literals
        "no-cond-assign": 0,
        // disallow assignment in conditional expressions
        "no-console": 0,
        // disallow use of console (off by default in the node environment)
        "no-constant-condition": 0,
        // disallow use of constant expressions in conditions
        "no-control-regex": 0,
        // disallow control characters in regular expressions
        "no-debugger": 0,
        // disallow use of debugger
        "no-dupe-args": 0,
        // disallow duplicate arguments in functions
        "no-dupe-keys": 0,
        // disallow duplicate keys when creating object literals
        "no-duplicate-case": 0,
        // disallow a duplicate case label
        "no-empty-character-class": 0,
        // disallow the use of empty character classes in regular expressions
        "no-empty": 0,
        // disallow empty statements
        "no-ex-assign": 0,
        // disallow assigning to the exception in a catch block
        "no-extra-boolean-cast": 0,
        // disallow double-negation boolean casts in a boolean context
        "no-extra-parens": 0,
        // disallow unnecessary parentheses (off by default)
        "no-extra-semi": 0,
        // disallow unnecessary semicolons
        "no-func-assign": 0,
        // disallow overwriting functions written as function declarations
        "no-inner-declarations": 0,
        // disallow function or variable declarations in nested blocks
        "no-invalid-regexp": 0,
        // disallow invalid regular expression strings in the RegExp constructor
        "no-irregular-whitespace": 0,
        // disallow irregular whitespace outside of strings and comments
        "no-negated-in-lhs": 0,
        // disallow negation of the left operand of an in expression
        "no-obj-calls": 0,
        // disallow the use of object properties of the global object (Math and JSON) as functions
        "no-regex-spaces": 0,
        // disallow multiple spaces in a regular expression literal
        "no-reserved-keys": 0,
        // disallow reserved words being used as object literal keys (off by default)
        "no-sparse-arrays": 0,
        // disallow sparse arrays
        "no-unreachable": 1,
        // disallow unreachable statements after a return, throw, continue, or break statement
        "use-isnan": 0,
        // disallow comparisons with the value NaN
        "valid-jsdoc": 0,
        // Ensure JSDoc comments are valid (off by default)
        "valid-typeof": 0,
        // Ensure that the results of typeof are compared against a valid string
        "no-unexpected-multiline": 0,
        // Avoid code that looks like two expressions but is actually one (off by default)
        "object-curly-spacing": 0,

        ////////// Best Practices //////////

        "accessor-pairs": 0,
        // enforces getter/setter pairs in objects (off by default)
        "block-scoped-var": 0,
        // treat var statements as if they were block scoped (off by default)
        "complexity": 0,
        // specify the maximum cyclomatic complexity allowed in a program (off by default)
        "consistent-return": 0,
        // require return statements to either always or never specify values
        "curly": 0,
        // specify curly brace conventions for all control statements
        "default-case": 0,
        // require default case in switch statements (off by default)
        "dot-notation": 0,
        // encourages use of dot notation whenever possible
        "dot-location": 0,
        // enforces consistent newlines before or after dots (off by default)
        "eqeqeq": 0,
        // require the use of === and !==
        "guard-for-in": 0,
        // make sure for-in loops have an if statement (off by default)
        "no-alert": 0,
        // disallow the use of alert, confirm, and prompt
        "no-caller": 0,
        // disallow use of arguments.caller or arguments.callee
        "no-div-regex": 0,
        // disallow division operators explicitly at beginning of regular expression (off by default)
        "no-else-return": 0,
        // disallow else after a return in an if (off by default)
        "no-empty-label": 0,
        // disallow use of labels for anything other then loops and switches
        "no-eq-null": 0,
        // disallow comparisons to null without a type-checking operator (off by default)
        "no-eval": 0,
        // disallow use of eval()
        "no-extend-native": 0,
        // disallow adding to native types
        "no-extra-bind": 0,
        // disallow unnecessary function binding
        "no-fallthrough": 0,
        // disallow fallthrough of case statements
        "no-floating-decimal": 0,
        // disallow the use of leading or trailing decimal points in numeric literals (off by default)
        "no-implied-eval": 0,
        // disallow use of eval()-like methods
        "no-iterator": 0,
        // disallow usage of __iterator__ property
        "no-labels": 0,
        // disallow use of labeled statements
        "no-lone-blocks": 0,
        // disallow unnecessary nested blocks
        "no-loop-func": 0,
        // disallow creation of functions within loops
        "no-multi-spaces": 0,
        // disallow use of multiple spaces
        "no-multi-str": 0,
        // disallow use of multiline strings
        "no-native-reassign": 0,
        // disallow reassignments of native objects
        "no-new-func": 0,
        // disallow use of new operator for Function object
        "no-new-wrappers": 0,
        // disallows creating new instances of String, Number, and Boolean
        "no-new": 0,
        // disallow use of new operator when not part of the assignment or comparison
        "no-octal-escape": 0,
        // disallow use of octal escape sequences in string literals, such as var foo = "Copyright \251";
        "no-octal": 0,
        // disallow use of octal literals
        "no-param-reassign": 0,
        // disallow reassignment of function parameters (off by default)
        "no-process-env": 0,
        // disallow use of process.env (off by default)
        "no-proto": 0,
        // disallow usage of __proto__ property
        "no-redeclare": 0,
        // disallow declaring the same variable more then once
        "no-return-assign": 0,
        // disallow use of assignment in return statement
        "no-script-url": 0,
        // disallow use of javascript: urls
        "no-self-compare": 0,
        // disallow comparisons where both sides are exactly the same (off by default)
        "no-sequences": 0,
        // disallow use of comma operator
        "no-throw-literal": 0,
        // restrict what can be thrown as an exception (off by default)
        "no-unused-expressions": 0,
        // disallow usage of expressions in statement position
        "no-void": 0,
        // disallow use of void operator (off by default)
        "no-warning-comments": 0,
        // disallow usage of configurable warning terms in comments, e.g. TODO or FIXME (off by default)
        "no-with": 0,
        // disallow use of the with statement
        "radix": 0,
        // require use of the second argument for parseInt() (off by default)
        "vars-on-top": 0,
        // requires to declare all vars on top of their containing scope (off by default)
        "wrap-iife": 0,
        // require immediate function invocation to be wrapped in parentheses (off by default)
        "yoda": 0,
        // require or disallow Yoda conditions


        ////////// Strict Mode //////////

        "strict": 0,
        // controls location of Use Strict Directives


        ////////// Variables //////////

        "no-catch-shadow": 0,
        // disallow the catch clause parameter name being the same as a variable in the outer scope (off by default in the node environment)
        "no-delete-var": 0,
        // disallow deletion of variables
        "no-label-var": 0,
        // disallow labels that share a name with a variable
        "no-shadow": 0,
        // disallow declaration of variables already declared in the outer scope
        "no-shadow-restricted-names": 0,
        // disallow shadowing of names such as arguments
        "no-undef": 0,
        // disallow use of undeclared variables unless mentioned in a /*global */ block
        "no-undef-init": 0,
        // disallow use of undefined when initializing variables
        "no-undefined": 0,
        // disallow use of undefined variable (off by default)
        "no-unused-vars": 0,
        // disallow declaration of variables that are not used in the code
        "no-use-before-define": 0,
        // disallow use of variables before they are defined


        ////////// Node.js //////////

        "handle-callback-err": 0,
        // enforces error handling in callbacks (off by default) (on by default in the node environment)
        "no-mixed-requires": 0,
        // disallow mixing regular variable and require declarations (off by default) (on by default in the node environment)
        "no-new-require": 0,
        // disallow use of new operator with the require function (off by default) (on by default in the node environment)
        "no-path-concat": 0,
        // disallow string concatenation with __dirname and __filename (off by default) (on by default in the node environment)
        "no-process-exit": 0,
        // disallow process.exit() (on by default in the node environment)
        "no-restricted-modules": 0,
        // restrict usage of specified node modules (off by default)
        "no-sync": 0,
        // disallow use of synchronous methods (off by default)


        ////////// Stylistic Issues //////////

        "array-bracket-spacing": 0,
        // enforce spacing inside array brackets (off by default)
        "brace-style": 0,
        // enforce one true brace style (off by default)
        "camelcase": 0,
        // require camel case names
        "comma-spacing": 0,
        // enforce spacing before and after comma
        "comma-style": 0,
        // enforce one true comma style (off by default)
        "computed-property-spacing": 0,
        // require or disallow padding inside computed properties (off by default)
        "consistent-this": 0,
        // enforces consistent naming when capturing the current execution context (off by default)
        "eol-last": 0,
        // enforce newline at the end of file, with no multiple empty lines
        "func-names": 0,
        // require function expressions to have a name (off by default)
        "func-style": 0,
        // enforces use of function declarations or expressions (off by default)
        "indent": [2, "tab", {
            "SwitchCase": 1
        }],
        // this option sets a specific tab width for your code (off by default)
        "key-spacing": [2, {
            "beforeColon": false,
            "afterColon": true
        }],
        "keyword-spacing": [0, {
            "before": true,
            "after": true
        }],
        // enforces spacing between keys and values in object literal properties
        "lines-around-comment": 0,
        // enforces empty lines around comments (off by default)
        "linebreak-style": 0,
        // disallow mixed 'LF' and 'CRLF' as linebreaks (off by default)
        "max-nested-callbacks": 0,
        // specify the maximum depth callbacks can be nested (off by default)
        "new-cap": 0,
        // disallow the omission of parentheses when invoking a constructor with no arguments
        "new-parens": 0,
        // disallow the omission of parentheses when invoking a constructor with no arguments
        "newline-after-var": 0,
        // allow/disallow an empty newline after var statement (off by default)
        "no-array-constructor": 2,
        "array-callback-return": 0,
        // disallow use of the Array constructor
        "no-continue": 0,
        // disallow use of the continue statement (off by default)
        "no-inline-comments": 0,
        // disallow comments inline after code (off by default)
        "no-lonely-if": 0,
        // disallow if as the only statement in an else block (off by default)
        "no-mixed-spaces-and-tabs": 0,
        // disallow mixed spaces and tabs for indentation
        "no-multiple-empty-lines": 0,
        // disallow multiple empty lines (off by default)
        "no-nested-ternary": 0,
        // disallow nested ternary expressions (off by default)
        "no-new-object": 2,
        // disallow use of the Object constructor
        "no-spaced-func": 0,
        // disallow space between function identifier and application
        "no-ternary": 0,
        // disallow the use of ternary operators (off by default)
        "no-trailing-spaces": 0,
        // disallow trailing whitespace at the end of lines
        "no-underscore-dangle": 0,
        "no-unneeded-ternary": 0,
        // disallow dangling underscores in identifiers
        "one-var": 0,
        // allow just one var statement per function (off by default)
        "operator-assignment": 0,
        // require assignment operator shorthand where possible or prohibit it entirely (off by default)
        "operator-linebreak": 0,
        // enforce operators to be placed before or after line breaks (off by default)
        "padded-blocks": 0,
        // enforce padding within blocks (off by default)
        "quote-props": 2,
        // require quotes around object literal property names (off by default)
        "quotes": 2,
        // specify whether double or single quotes should be used
        "semi-spacing": 0,
        // enforce spacing before and after semicolons
        "semi": [2, "always"],
        // require or disallow use of semicolons instead of ASI
        "sort-vars": 0,
        // sort variables within the same declaration block (off by default)
        "space-after-keywords": 0,
        // require a space after certain keywords (off by default)
        "space-before-blocks": 0,
        // require or disallow space before blocks (off by default)
        "space-before-function-paren": 0,
        // require or disallow space before function opening parenthesis (off by default)
        "space-in-parens": 0,
        // require or disallow spaces inside parentheses (off by default)
        "space-infix-ops": 0,
        // require spaces around operators
        "space-return-throw-case": 0,
        // require a space after return, throw, and case
        "space-unary-ops": 0,
        // require or disallow spaces before/after unary operators (words on by default, nonwords off by default)
        "spaced-comment": 0,
        // require or disallow a space immediately following the // or /* in a comment (off by default)
        "wrap-regex": 0,
        // require regex literals to be wrapped in parentheses (off by default)


        ////////// ECMAScript 6 //////////

        "arrow-body-style": 0,
        "constructor-super": 0,
        // verify super() callings in constructors (off by default)
        "generator-star-spacing": 0,
        // enforce the spacing around the * in generator functions (off by default)
        "no-this-before-super": 0,
        // disallow to use this/super before super() calling in constructors (off by default)
        "no-var": 2,
        // require let or const instead of var (off by default)
        "object-shorthand": 2,
        // require method and property shorthand syntax for object literals (off by default)
        "prefer-const": 2,
        "no-const-assign": 2,
        // suggest using of const declaration for variables that are never modified after declared (off by default)
        "no-confusing-arrow": 0,
        "prefer-template": 2,
        "template-curly-spacing": 2,
        "no-useless-escape": 2,
        "prefer-rest-params": 2,

        ////////// Legacy //////////

        "max-depth": 0,
        // specify the maximum depth that blocks can be nested (off by default)
        "max-len": 0,
        // specify the maximum length of a line in your program (off by default)
        "max-params": 0,
        // limits the number of parameters that can be used in the function declaration. (off by default)
        "max-statements": 0,
        // specify the maximum number of statement allowed in a function (off by default)
        "no-bitwise": 0,
        // disallow use of bitwise operators (off by default)
        "no-plusplus": 0,
        // disallow use of unary operators, ++ and -- (off by default)
        "jsx-a11y/no-static-element-interactions": 0,
        "jsx-a11y/img-has-alt": 0
    }
}